services:
  - docker:dind
variables:
  DOCKER_DRIVER: overlay2
before_script:
  - apk update && apk upgrade && apk add --no-cache bash openssh
stages:
  - build
  - release
build:
  stage: build
  image: docker:latest
  before_script:
    - export COMMIT_SHA=$(echo $CI_COMMIT_SHA | cut -c1-8)
  script:
    - echo $GCLOUD_SERVICE_KEY | base64 -d > ${HOME}/gcloud-service-key.json
    - docker login -u _json_key --password-stdin https://eu.gcr.io < ${HOME}/gcloud-service-key.json
    - docker build -t eu.gcr.io/$GCP_PROJECT_ID/$CI_PROJECT_NAME:$COMMIT_SHA . #:latest .
    - echo "eu.gcr.io/$GCP_PROJECT_ID/$CI_PROJECT_NAME:$COMMIT_SHA"
    - docker push eu.gcr.io/$GCP_PROJECT_ID/$CI_PROJECT_NAME:$COMMIT_SHA #:latest
  only:
    - master
release:
  image: google/cloud-sdk:alpine
  stage: release
  variables:
    KUBE_LATEST_VERSION: "v1.8.5"
  before_script:
    - export COMMIT_SHA=$(echo $CI_COMMIT_SHA | cut -c1-8)
  script:
    - curl https://sdk.cloud.google.com | bash > /dev/null;
    - source $HOME/google-cloud-sdk/path.bash.inc
    - gcloud --quiet components update kubectl
    - echo $GCLOUD_SERVICE_KEY | base64 -d > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json  || die "unable to authenticate service account for gcloud"
    - gcloud container clusters get-credentials my-cluster --zone europe-west6-a --project $GCP_PROJECT_ID
    - kubectl apply -f cryptoman-socketshark-k8s.yaml
    - kubectl set image deployment/cryptoman-socketshark --namespace cryptoman cryptoman-socketshark=eu.gcr.io/$GCP_PROJECT_ID/$CI_PROJECT_NAME:$COMMIT_SHA
  only:
    - master